import Foundation

extension GenericWindowsBundler {
  /// Describes the structure of a bundle generated by ``GenericWindowsBundler``.
  struct BundleStructure {
    /// The root directory of the bundle.
    var root: URL
    /// The directory containing modules (executables and dynamic libraries).
    var modules: URL
    /// The directory containing resources. Currently the same as ``modules``.
    var resources: URL
    /// The main executable.
    var mainExecutable: URL

    /// Represents the bundle structure using the simple ``BundlerOutputStructure``
    /// data type.
    var asOutputStructure: BundlerOutputStructure {
      BundlerOutputStructure(bundle: root, executable: mainExecutable)
    }

    /// All directories in the structure. Used when creating the structure
    /// on disk.
    private var directories: [URL] {
      [root, modules, resources]
    }

    /// Computes the bundle structure corresponding to the provided context.
    init(at root: URL, forApp appName: String, withIdentifier appIdentifier: String) {
      self.root = root
      modules = root
      resources = root
      mainExecutable = modules / "\(appName).exe"
    }

    /// Creates all directories (including intermediate directories) required to
    /// create this bundle structure.
    func createDirectories() throws(Error) {
      for directory in directories {
        try FileManager.default.createDirectory(
          at: directory,
          errorMessage: ErrorMessage.failedToCreateDirectory
        )
      }
    }
  }
}
