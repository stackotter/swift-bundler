{
  "abstract" : [
    {
      "text" : "Custom templates are a great way to tailor Swift Bundler to your workflow.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/swift-bundler\/documentation\/swift-bundler"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/swift-bundler\/documentation\/swift-bundler\/custom-templates"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "swift-bundler"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Custom templates"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Making custom templates isn’t too complicated, and after reading this page you should be able to easily create templates for all your needs. If you create a template that you think many users would find useful, feel free to open a PR at ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/stackotter\/swift-bundler-templates",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to add it to the default set of templates.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Creating-a-custom-template",
          "level" : 2,
          "text" : "Creating a custom template",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Create a new template ‘repository’ (a directory that will contain a collection of templates)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Create a directory inside the template repository. The name of the directory is the name of your template. (",
                      "type" : "text"
                    },
                    {
                      "code" : "Base",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " is a reserved name, and the directory must not start with a ",
                      "type" : "text"
                    },
                    {
                      "code" : ".",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ")",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Create a ",
                      "type" : "text"
                    },
                    {
                      "code" : "Template.toml",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " file (inside the template directory) with the following contents:",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "code" : [
            "description = \"My first package template.\"",
            "platforms = [\"macOS\", \"iOS\"] # Adjust according to your needs, valid values are currently `macOS` and `iOS`"
          ],
          "syntax" : "toml",
          "type" : "codeListing"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Add files to the template (see below for details)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "start" : 4,
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Any files within the template directory (excluding ",
              "type" : "text"
            },
            {
              "code" : "Template.toml",
              "type" : "codeVoice"
            },
            {
              "text" : ") are copied to the output directory when creating a package. Any occurrence of ",
              "type" : "text"
            },
            {
              "code" : "{{VARIABLE}}",
              "type" : "codeVoice"
            },
            {
              "text" : " within the file’s relative path is replaced with the corresponding variable’s value. Any occurrence of ",
              "type" : "text"
            },
            {
              "code" : "{{VARIABLE}}",
              "type" : "codeVoice"
            },
            {
              "text" : " within the contents of files ending with ",
              "type" : "text"
            },
            {
              "code" : ".template",
              "type" : "codeVoice"
            },
            {
              "text" : " is replaced with the corresponding variable’s value and the ",
              "type" : "text"
            },
            {
              "code" : ".template",
              "type" : "codeVoice"
            },
            {
              "text" : " file extension is removed. The available variables are ",
              "type" : "text"
            },
            {
              "code" : "PACKAGE",
              "type" : "codeVoice"
            },
            {
              "text" : " (the package’s name) and ",
              "type" : "text"
            },
            {
              "code" : "IDENTIFIER",
              "type" : "codeVoice"
            },
            {
              "text" : " (the package’s identifier).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "inlineContent" : [
                {
                  "text" : "All indentation must be tabs (not spaces) so that the ",
                  "type" : "text"
                },
                {
                  "code" : "create",
                  "type" : "codeVoice"
                },
                {
                  "text" : " command’s ",
                  "type" : "text"
                },
                {
                  "code" : "--indentation",
                  "type" : "codeVoice"
                },
                {
                  "text" : " option functions correctly.",
                  "type" : "text"
                }
              ],
              "type" : "strong"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can also create a ",
              "type" : "text"
            },
            {
              "code" : "Base",
              "type" : "codeVoice"
            },
            {
              "text" : " directory within the template repository. Whenever creating a new package, the ",
              "type" : "text"
            },
            {
              "code" : "Base",
              "type" : "codeVoice"
            },
            {
              "text" : " directory is applied first and should contain the common files between all templates, such as the ",
              "type" : "text"
            },
            {
              "code" : ".gitignore",
              "type" : "codeVoice"
            },
            {
              "text" : " file. A template can override files in the ",
              "type" : "text"
            },
            {
              "code" : "Base",
              "type" : "codeVoice"
            },
            {
              "text" : " template by containing files of the same name.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/stackotter\/swift-bundler-templates",
              "isActive" : true,
              "overridingTitle" : "the swift-bundler-templates repository",
              "overridingTitleInlineContent" : [
                {
                  "text" : "the swift-bundler-templates repository",
                  "type" : "text"
                }
              ],
              "type" : "reference"
            },
            {
              "text" : " for some example templates.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Using-a-custom-template",
          "level" : 2,
          "text" : "Using a custom template",
          "type" : "heading"
        },
        {
          "code" : [
            "swift bundler create MyApp --identifier com.example.MyApp --template MyTemplate --template-repository \/path\/to\/TemplateRepository"
          ],
          "syntax" : "sh",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Advanced-usage",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/swift-bundler\/documentation\/swift-bundler\/metal-shaders"
      ],
      "title" : "Advanced usage"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swift-bundler\/custom-templates"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://swift-bundler/documentation/swift-bundler/metal-shaders": {
  "abstract" : [
    {
      "text" : "Using Metal shaders with Swift Bundler.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/swift-bundler\/documentation\/swift-bundler\/metal-shaders",
  "kind" : "article",
  "role" : "article",
  "title" : "Metal shaders",
  "type" : "topic",
  "url" : "\/documentation\/swift-bundler\/metal-shaders"
},
"doc://swift-bundler/documentation/swift-bundler": {
  "abstract" : [
    {
      "text" : "Create macOS apps with Swift packages instead of Xcode projects.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/swift-bundler\/documentation\/swift-bundler",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "swift-bundler",
  "type" : "topic",
  "url" : "\/documentation\/swift-bundler"
},
"https://github.com/stackotter/swift-bundler-templates": {
  "identifier" : "https:\/\/github.com\/stackotter\/swift-bundler-templates",
  "title" : "the swift-bundler-templates repository",
  "titleInlineContent" : [
    {
      "text" : "the swift-bundler-templates repository",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/stackotter\/swift-bundler-templates"
}
}
}